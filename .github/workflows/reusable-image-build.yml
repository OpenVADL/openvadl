# A callable workflow that encapsulates the process of
# building and pushing docker images.
# It is especially useful for multiplatform builds that need to be built on
# different runners (one per platform) and later merged with the
# reusable-image-merge workflow.

name: Reusable Image Build Workflow

on:
  workflow_call:
    inputs:
      image:
        description: 'The image name: ghcr.io/<org>/<image>'
        required: true
        type: string
      platform:
        description: 'The docker build platform (linux/arm64 or linux/amd64)'
        required: true
        type: string
      runner:
        description: 'Runs-on property'
        required: true
        type: string
      context:
        description: 'Path to docker build context'
        required: true
        type: string
      tags:
        description: 'Tags in metadata-action format'
        required: false
        type: string
        default: latest

jobs:
  build-and-push:
    name: ${{ inputs.platform }}
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ inputs.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image }}
          tags: ${{ inputs.tags }}

      - name: Unlock Keychain
        if: ${{ runner.os == 'macOS' }}
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.X06_KEYCHAIN_PASSWORD }}
        run: |
          security -v unlock-keychain -p "$KEYCHAIN_PASSWORD" ~/Library/Keychains/login.keychain-db

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          platforms: ${{ inputs.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ inputs.image }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: List temp directory contents
        run: ls -al ${{ runner.temp }}/digests

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1