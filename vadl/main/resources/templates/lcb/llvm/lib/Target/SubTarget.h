#ifndef LLVM_LIB_TARGET_[(${namespace})]_[(${namespace})]SUBTARGET_H
#define LLVM_LIB_TARGET_[(${namespace})]_[(${namespace})]SUBTARGET_H

#include "[(${namespace})].h"
#include "[(${namespace})]RegisterInfo.h"
#include "[(${namespace})]FrameLowering.h"
#include "[(${namespace})]ISelLowering.h"
#include "[(${namespace})]InstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "[(${namespace})]GenSubtargetInfo.inc"

namespace llvm
{
    class [(${namespace})]Subtarget : public [(${namespace})]GenSubtargetInfo
    {
        // virtual anchor method to decrease link time as the vtable
        virtual void anchor();

    public:
        [(${namespace})]Subtarget(const Triple &TargetTriple, StringRef Cpu, StringRef TuneCPU, StringRef FeatureString, const TargetMachine &TM, const TargetOptions &Options, CodeModel::Model CodeModel, CodeGenOpt::Level OptLevel);

        // Parses features string setting specified subtarget options.
        // The definition of this function is auto-generated by tblgen.
        void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

        const [(${namespace})]InstrInfo *getInstrInfo() const override
        {
            return &InstrInfo;
        }

        const [(${namespace})]FrameLowering *getFrameLowering() const override
        {
            return &FrameLowering;
        }

        const [(${namespace})]RegisterInfo *getRegisterInfo() const override
        {
            return &RegInfo;
        }

        const [(${namespace})]TargetLowering *getTargetLowering() const override
        {
            return &TLInfo;
        }

        const SelectionDAGTargetInfo *getSelectionDAGInfo() const override
        {
            return &TSInfo;
        }

    private:
        [(${namespace})]InstrInfo InstrInfo;
        [(${namespace})]FrameLowering FrameLowering;
        [(${namespace})]TargetLowering TLInfo;
        SelectionDAGTargetInfo TSInfo;
        [(${namespace})]RegisterInfo RegInfo;
    };
}

#endif // LLVM_LIB_TARGET_[(${namespace})]_[(${namespace})]SUBTARGET_H