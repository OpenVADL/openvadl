package vadl.gcb.passes.relocation.model;

import vadl.cppCodeGen.model.GcbImmediateExtractionCppFunction;
import vadl.cppCodeGen.model.GcbUpdateFieldRelocationCppFunction;
import vadl.cppCodeGen.model.VariantKind;
import vadl.cppCodeGen.passes.typeNormalization.CppTypeNormalizationPass;
import vadl.utils.SourceLocation;
import vadl.viam.Format;
import vadl.viam.Identifier;
import vadl.viam.Parameter;
import vadl.viam.Relocation;
import vadl.viam.graph.control.ReturnNode;
import vadl.viam.graph.dependency.FuncParamNode;

/**
 * {@link AutomaticallyGeneratedRelocation} are relocations which were
 * generated by the VADL compiler.
 */
public class AutomaticallyGeneratedRelocation extends CompilerRelocation implements RelocationLowerable {
  protected final Identifier identifier;
  // This is the function which computes the value for the
  // relocation.
  protected final GcbImmediateExtractionCppFunction valueRelocation;
  // This is the function which updates the value in the format.
  protected final GcbUpdateFieldRelocationCppFunction fieldUpdateFunction;

  /**
   * Constructor.
   */
  public static AutomaticallyGeneratedRelocation create(Kind kind,
                                                        Format format,
                                                        Format.Field field,
                                                        GcbUpdateFieldRelocationCppFunction fieldUpdateFunction,
                                                        VariantKind variantKindRef) {
    var parameter = new Parameter(new Identifier("input", SourceLocation.INVALID_SOURCE_LOCATION),
        format.type());
    var identifier = generateName(format, field, kind);
    var relocation = new Relocation(identifier, new Parameter[] {parameter}, format.type());
    var valueRelocation = CppTypeNormalizationPass.createGcbRelocationCppFunction(relocation);
    valueRelocation.behavior().addWithInputs(new ReturnNode(new FuncParamNode(parameter)));
    return new AutomaticallyGeneratedRelocation(identifier, kind, format, field,
        relocation,
        valueRelocation,
        fieldUpdateFunction,
        variantKindRef);
  }

  private AutomaticallyGeneratedRelocation(Identifier identifier, Kind kind, Format format, Format.Field field,
                                           Relocation relocationRef,
                                           GcbImmediateExtractionCppFunction valueRelocation,
                                           GcbUpdateFieldRelocationCppFunction fieldUpdateFunction,
                                           VariantKind variantKindRef) {
    super(kind, format, field, relocationRef, variantKindRef);
    this.identifier = identifier;
    this.valueRelocation = valueRelocation;
    this.fieldUpdateFunction = fieldUpdateFunction;
  }

  private static Identifier generateName(Format format, Format.Field imm, Kind kind) {
    return format.identifier.append(kind.name(), imm.identifier.simpleName());
  }

  @Override
  public GcbImmediateExtractionCppFunction valueRelocation() {
    return valueRelocation;
  }

  @Override
  public GcbUpdateFieldRelocationCppFunction fieldUpdateFunction() {
    return fieldUpdateFunction;
  }

  @Override
  public VariantKind variantKind() {
    return variantKindRef;
  }

  @Override
  public Identifier identifier() {
    return identifier;
  }
}
