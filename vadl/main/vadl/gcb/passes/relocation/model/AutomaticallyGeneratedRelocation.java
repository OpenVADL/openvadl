// SPDX-FileCopyrightText : Â© 2025 TU Wien <vadl@tuwien.ac.at>
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

package vadl.gcb.passes.relocation.model;

import vadl.cppCodeGen.model.GcbImmediateExtractionCppFunction;
import vadl.cppCodeGen.model.GcbUpdateFieldRelocationCppFunction;
import vadl.cppCodeGen.passes.typeNormalization.CppTypeNormalizationPass;
import vadl.gcb.valuetypes.VariantKind;
import vadl.utils.SourceLocation;
import vadl.viam.Format;
import vadl.viam.Identifier;
import vadl.viam.Parameter;
import vadl.viam.Relocation;
import vadl.viam.graph.control.ReturnNode;
import vadl.viam.graph.dependency.FuncParamNode;

/**
 * {@link AutomaticallyGeneratedRelocation} are relocations which were
 * generated by the VADL compiler.
 */
public class AutomaticallyGeneratedRelocation extends CompilerRelocation
    implements HasRelocationComputationAndUpdate {
  protected final VariantKind variantKind;
  // This is the function which computes the value for the
  // relocation.
  protected final GcbImmediateExtractionCppFunction valueRelocation;
  // This is the function which updates the value in the format.
  protected final GcbUpdateFieldRelocationCppFunction fieldUpdateFunction;

  /**
   * Constructor.
   */
  public static AutomaticallyGeneratedRelocation create(Kind kind,
                                                        VariantKind variantKind,
                                                        Format format,
                                                        Format.Field field,
                                                        GcbUpdateFieldRelocationCppFunction
                                                            fieldUpdateFunction) {
    var identifier = generateName(format, field, kind);
    var parameter = new Parameter(new Identifier("input",
        SourceLocation.INVALID_SOURCE_LOCATION),
        format.type());
    var relocation = new Relocation(identifier, new Parameter[] {parameter}, format.type());
    var valueRelocation = CppTypeNormalizationPass.createGcbRelocationCppFunction(relocation);
    valueRelocation.behavior().addWithInputs(new ReturnNode(new FuncParamNode(parameter)));
    return new AutomaticallyGeneratedRelocation(identifier,
        kind,
        variantKind,
        format,
        field,
        relocation,
        valueRelocation,
        fieldUpdateFunction);
  }

  private AutomaticallyGeneratedRelocation(Identifier identifier,
                                           Kind kind,
                                           VariantKind variantKind,
                                           Format format,
                                           Format.Field field,
                                           Relocation relocationRef,
                                           GcbImmediateExtractionCppFunction valueRelocation,
                                           GcbUpdateFieldRelocationCppFunction fieldUpdateFunction
  ) {
    super(identifier, kind, format, field, relocationRef);
    this.variantKind = variantKind;
    this.valueRelocation = valueRelocation;
    this.fieldUpdateFunction = fieldUpdateFunction;
  }

  private static Identifier generateName(Format format, Format.Field imm, Kind kind) {
    return format.identifier.append(kind.name(), imm.identifier.simpleName());
  }

  @Override
  public GcbImmediateExtractionCppFunction valueRelocation() {
    return valueRelocation;
  }

  @Override
  public GcbUpdateFieldRelocationCppFunction fieldUpdateFunction() {
    return fieldUpdateFunction;
  }

  @Override
  public Identifier identifier() {
    return identifier;
  }

  @Override
  public VariantKind variantKind() {
    return variantKind;
  }
}
