
instruction set architecture Tests = {
  using Index = Bits<5>
  using Address  = Bits<32>

  register X: Address

  instruction TRIVIAL: TMP = {
    X := 4
  }

  instruction SINGLE: TMP = {
    if TWO = 3 then {
      X := 5
    }
    X := 4
  }

  instruction SINGLE_UNIQUE: TMP = {
      if TWO = 3 then {
        X := 5
      }
      // same as upper
      X := 5
    }

   instruction SINGLE_IF_ELSE: TMP = {
     if TWO = 3 then {
       X := 5
     } else {
       // same as upper
       X := 5
     }
   }

  instruction DUAL_IF_ELSE: TMP = {
     if TWO = 3 then {
       X := 10
       if TWO = 4 then {
          X := 11
       } else {
          X := 12
       }
     } else {
       // same as upper
       X := 20
     }
   }

  encoding TRIVIAL = { ONE = 2 }
  encoding SINGLE = { ONE = 2 }
  encoding SINGLE_UNIQUE = { ONE = 2 }
  encoding SINGLE_IF_ELSE = { ONE = 2 }
  encoding DUAL_IF_ELSE = { ONE = 2 }
  assembly TRIVIAL, SINGLE, SINGLE_UNIQUE, SINGLE_IF_ELSE, DUAL_IF_ELSE = "just a dummy"

  format TMP: Address =
  { ONE: Bits<16>
  , TWO: Bits<16>
  }
}

micro processor TEST implements Tests = { start = 0x1000 }