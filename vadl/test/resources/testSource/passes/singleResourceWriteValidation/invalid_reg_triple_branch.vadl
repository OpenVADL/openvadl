// Double write on register in a branch and at end of parent branch (but with nested branching)

instruction set architecture RegDualBranch = {

  register REG: Bits<32>

  instruction TEST: TMP = {
    if TWO = 1 then {
    } else {
        if ONE = 2 then {
            REG := 1
        }
      REG := 2
    }
  }

  encoding TEST = { ONE = 1 }
  assembly TEST = ""

  format TMP: Bits<32> =
  { ONE: Bits<16>
  , TWO: Bits<16>
  }
}

application binary interface ABI for RegDualBranch = {}
micro processor TEST implements RegDualBranch with ABI = {}