
instruction set architecture Test = {
  using Index = Bits<5>
  using Address  = Bits<32>

  memory MEM: Index -> Address

  // std read
  instruction READ_1: HELPER = A := MEM(2)

  // read with words
  instruction READ_2: HELPER = A := MEM<4>(2) as Address

  // std write
  instruction WRITE_1: HELPER = MEM(2) := 32 as Address

  instruction WRITE_2: HELPER = MEM<2>(2) := 32 as Bits<64>


  // Not so important definitions
  register A: Address

  encoding READ_1 = { ONE = 2 }
  encoding READ_2 = { ONE = 2 }
  encoding WRITE_1 = { ONE = 2 }
  encoding WRITE_2 = { ONE = 2 }
  assembly READ_1, READ_2, WRITE_1, WRITE_2 = "just a dummy"

  format HELPER: Address =
  { ONE: Address
  }

}

processor TEST implements Test = {}