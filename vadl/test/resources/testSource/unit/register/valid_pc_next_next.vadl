
instruction set architecture PcTest = {
  using Regs = Bits<32>

  [next next]
  program counter PC: Regs

  instruction READ_PC: F = A := PC
  instruction WRITE_PC: F = PC := A

  register A: Regs
  encoding READ_PC = { I = 2 }
  encoding WRITE_PC = { I = 2 }
  assembly READ_PC, WRITE_PC = "Test"

  format F: Regs = {
    I: Regs
  }
}

application binary interface ABI for PcTest = {}
micro processor TEST implements PcTest with ABI = {}